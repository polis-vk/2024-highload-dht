plugins {
    id 'java'
    id 'application'
    id 'net.ltgt.errorprone' version '3.1.0'
    id 'checkstyle'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations.checkstyle {
    resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
        select("com.google.guava:guava:0")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Checks
    errorprone 'com.google.errorprone:error_prone_core:2.15.0'
    checkstyle 'com.puppycrawl.tools:checkstyle:10.13.0'

    // Errorprone annotations for solve with warnings
    implementation group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.15.0'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    // As one-nio uses log4j directly
    implementation 'org.slf4j:log4j-over-slf4j:2.0.11'

    // Annotations for better code documentation
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Our beloved one-nio
    implementation 'ru.odnoklassniki:one-nio:1.7.1'

    // JUnit Jupiter test framework
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
}

test {
    maxHeapSize = "128m"
    useJUnitPlatform()
    jvmArgs += ["--enable-preview"]
}

checkstyle {
    configFile = new File("checkstyle.xml")
    checkstyleTest.enabled = false
}

compileJava {
    options.compilerArgs += ["--enable-preview"]

    // Enforce errors
//    options.compilerArgs += ["-Werror"]
}

compileTestJava {
    options.compilerArgs += ["--enable-preview"]
}

application {
    mainClass = 'ru.vk.itmo.test.reference.ReferenceService'
    applicationDefaultJvmArgs = ['-Xmx128m', '--enable-preview', '-Xlog:gc']
    // + ['-XX:+UseSerialGC']
//
}
